apiVersion: apps/v1
kind: Deployment
metadata:
  name: word-squad
spec:
  revisionHistoryLimit: 3
  replicas: 2
  selector:
    matchLabels:
      app: word-squad
  template:
    metadata:
      labels:
        app: word-squad
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - oewn-mysql
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: django-bot
          image: ghcr.io/raynix/word-squad:dev-3573129582
          envFrom:
            - secretRef:
                name: word-squad-env
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: wordSquad.settings-tg
            - name: PROD
              value: 'true'
          ports:
            - name: webhook
              containerPort: 8000
          volumeMounts:
            - name: word-squad-settings
              mountPath: /app/wordSquad/settings-tg.py
              subPath: settings-tg.py
          resources:
            requests:
              memory: 400Mi
              cpu: 200m
          livenessProbe:
            tcpSocket:
              port: 8000
          readinessProbe:
            tcpSocket:
              port: 8000
      volumes:
        - name: word-squad-settings
          secret:
            secretName: word-squad-settings
